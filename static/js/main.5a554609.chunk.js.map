{"version":3,"sources":["store/action-types/index.ts","models/Priority.ts","models/Task.ts","models/StagedDay.ts","models/Todo.ts","models/Category.ts","constraints/dummyData.ts","store/action-creators/taskActionCreator.ts","Utils/Modal.tsx","pages/EisenhowerMatrixPage/ModalTask/ModalTask.tsx","pages/EisenhowerMatrixPage/components/PriorityHorizontalLabel.tsx","pages/EisenhowerMatrixPage/components/PriorityVerticalLabel.tsx","pages/EisenhowerMatrixPage/components/TooltipTaskDescription.tsx","pages/EisenhowerMatrixPage/ModalTask/ModalTaskEdit.tsx","pages/EisenhowerMatrixPage/ModalTaskDetails/components/TodoComponent.tsx","store/action-creators/todoActionCreator.ts","pages/EisenhowerMatrixPage/ModalTaskDetails/ModalTaskDetails.tsx","pages/EisenhowerMatrixPage/components/TaskItem.tsx","pages/EisenhowerMatrixPage/components/PriorityGrid.tsx","pages/EisenhowerMatrixPage/EisenhowerMatrix.tsx","App.tsx","store/reducers/tasksReducer.ts","store/reducers/todosReducer.ts","store/reducers/rootReducer.ts","index.tsx"],"names":["ActionType","Priority","id","type","color","this","Task","weekId","priorityId","categoryId","title","description","due","isCompleted","isArchived","uuid","StagedDay","day","Todo","taskId","nameTodo","Category","name","icon","weeks","priorities","categories","MODAL_STYLES","position","top","left","transform","zIndex","Modal","prevX","prevY","open","children","dragModal","useRef","elementDrag","e","window","event","preventDefault","newX","clientX","newY","clientY","current","style","offsetTop","offsetLeft","closeDragElement","document","removeEventListener","ReactDom","createPortal","onMouseDown","target","currentTarget","addEventListener","dragMouseDown","getElementById","ModalTask","isOpen","onClose","dispatch","useDispatch","useState","setTitle","setDescription","categorySelected","setCategorySelected","weekDaySelected","setWeekDaySelected","prioritySelected","setPrioritySelected","dueDate","setDueDate","handleSubmit","task","newTask","CREATE_TASK","payload","className","onClick","onSubmit","value","onChange","valueAsDate","parseInt","map","category","week","priority","PriorityHorizontalLabel","priorityType","PriorityVerticalLabel","TooltipTaskDescription","todos","useSelector","state","filter","todo","completedTodos","forEach","getClassPosition","length","ModalTaskEdit","useEffect","updatedTask","UPDATE_TASK","updateTask","moment","utcOffset","format","defaultValue","TodoComponent","selectedTaskId","priorityColor","inputTodo","setInputTodo","checkShowTodosCompleted","setCheckShowTodosCompleted","isDraggingTodo","setIsDraggingTodo","dragItemTodo","dragItemNodeTodo","handleCheckTodo","todoId","TOGGLE_COMPLETE_TODO","handleDeleteTodo","DELETE_TODO","handleDragEnterTodo","todoIdTarget","todoDrag","DRAGGING_TODO","handleDragEndTodo","backgroundColor","newTodo","CREATE_TODO","defaultChecked","textAlign","fontSize","marginBottom","isCompletedTodo","cursor","draggable","onDoubleClick","onDragStart","setTimeout","handletDragStartTodo","onDragEnter","undefined","textDecoration","marginLeft","ModalTaskDetails","isModalTaskEditOpen","setIsModalTaskEditOpen","tasks","find","categoryTask","handleArchiveTask","TOGGLE_ARCHIVED_TASK","background","TaskItem","timer","dragging","handleDragEnter","handletDragStart","isModalTaskDetailsOpen","setIsModalTaskDetailsOpen","prevent","filteredTasks","handleToggledCompleteTask","clearTimeout","TOGGLE_COMPLETE_TASK","toggleCompleteTask","handleOpenModalTaskDetails","SET_SELECTED_TASK_ID","setSelectedTaskId","getCategoryItem","REMOVE_SELECTED_TASK_ID","indexTask","display","alignItems","PriorityGrid","onDragging","draggedItem","onDragged","dragItemNode","item","classList","add","handleDragEnd","targetItem","indexItem","DRAGGING_TASK","onDragOver","EisenhowerMatrix","isModalTaskOpen","setIsModalTaskOpen","setDraggedItem","setDragging","handleDragged","handleSetIsDragging","isDragging","indexWeek","App","initialState","foundIndex","tasksReducer","action","push","findIndex","el","toggleArchivedTask","draggingTask","foundIndexTarget","splice","todosReducer","toggleCompleteTodo","deletedTodo","updatedDeletedTodo","draggingTodo","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading"],"mappings":"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","file":"static/js/main.5a554609.chunk.js","sourcesContent":["export enum ActionType {\r\n    CREATE_TASK = \"create_task\",\r\n    UPDATE_TASK = \"update_task\",\r\n    TOGGLE_COMPLETE_TASK = \"toggle_complete_task\",\r\n    SET_SELECTED_TASK_ID = \"set_selected_task_id\",\r\n    REMOVE_SELECTED_TASK_ID = \"remove_selected_task_id\",\r\n    TOGGLE_ARCHIVED_TASK = \"toggle_archived_task\",\r\n    DRAGGING_TASK = \"dragging_task\",\r\n\r\n    CREATE_TODO = \"create_todo\",\r\n    TOGGLE_COMPLETE_TODO = \"toggle_complete_todo\",\r\n    DELETE_TODO = \"delete_todo\",\r\n    DRAGGING_TODO = \"dragging_todo\"\r\n}","export class Priority{\r\n    id: number;\r\n    type: string;\r\n    color: string;\r\n    \r\n    constructor(id: number, type: string, color: string){\r\n        this.id = id;\r\n        this.type = type;\r\n        this.color = color;\r\n    }\r\n}","import { v4 as uuid } from 'uuid';\r\n\r\nexport class Task{\r\n    id: string;\r\n    weekId: number;\r\n    priorityId: number;\r\n    categoryId: number;\r\n    title: string;\r\n    description: string;\r\n    due: Date | null;\r\n    isCompleted: boolean;\r\n    isArchived: boolean\r\n\r\n    constructor(weekId: number, priorityId: number, categoryId: number, title: string, description: string, due: Date | null){\r\n        this.id = uuid();\r\n        this.weekId = weekId;\r\n        this.categoryId = categoryId;\r\n        this.priorityId = priorityId;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.due = due;\r\n        this.isCompleted = false;\r\n        this.isArchived = false;\r\n    }\r\n}","export class StagedDay{\r\n    id: number;\r\n    day: string;\r\n\r\n    constructor(id: number, day: string){\r\n        this.id = id;\r\n        this.day = day;\r\n    }\r\n}\r\n\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport class Todo{\r\n    id: string;\r\n    taskId: string;\r\n    nameTodo: string;\r\n    isCompleted: boolean;\r\n\r\n    constructor(taskId: string, nameTodo: string){\r\n        this.id = uuid();\r\n        this.taskId = taskId;\r\n        this.nameTodo = nameTodo;\r\n        this.isCompleted = false;\r\n    }\r\n}","export class Category{\r\n    id: number;\r\n    name: string;\r\n    icon: string;\r\n\r\n    constructor(id: number, name: string, icon: string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.icon = icon\r\n    }\r\n}\r\n\r\n","import { StagedDay, Priority, Task, Category } from '../models/index'\r\n\r\n// weeks\r\nexport const weeks: StagedDay[] = [\r\n    new StagedDay(1, \"monday\"),\r\n    new StagedDay(2, \"Tuesday\"),\r\n    new StagedDay(3, \"Wednesday\"),\r\n    new StagedDay(4, \"thursday\"),\r\n    new StagedDay(5, \"Friday\"),\r\n    new StagedDay(6, \"Saturday\"),\r\n    new StagedDay(7, \"Sunday\"),\r\n    new StagedDay(8, \"Backlog\"),\r\n];\r\n\r\n// Priorities\r\nexport const priorities: Priority[] = [\r\n    new Priority(1, \"Do\", \"#89CF00\"),\r\n    new Priority(2, \"Schedule\", \"#2E87F6\"),\r\n    new Priority(3, \"Delegate\", \"#FFA700\"),\r\n    new Priority(4, \"Delete\", \"#DE0000\")\r\n];\r\n\r\n// Categories\r\nexport const categories: Category[] = [\r\n    new Category(1, \"College\", \"ant-design:book-outlined\"),\r\n    new Category(2, \"Other\", \"carbon:warning-other\"),\r\n    new Category(3, \"Personal\", \"icon-park-outline:personal-collection\"),\r\n    new Category(4, \"Study\", \"clarity:computer-line\"),\r\n    new Category(5, \"Work\", \"bytesize:work\"),\r\n\r\n]\r\n\r\n// Dummy tasks\r\nexport const dummyTasks: Task[] = [ \r\n    new Task(1, 1, 1, \"Fazer Lição de Casa\", \"\", null ),\r\n    new Task(1, 2, 2, \"Lavar a louça\", \"\", null),\r\n    new Task(2, 4, 3, \"Correr\", \"\", null),\r\n    new Task(2, 4, 4, \"Palmeiras\", \"\", null),\r\n    new Task(3, 1, 5,  \"Correr\", \"\", null)\r\n]","import { Dispatch } from \"redux\"\r\nimport { Task } from \"../../models\"\r\nimport { ActionType } from \"../action-types\"\r\nimport { Action } from \"../actions/tasks\"\r\n\r\ntype DraggItemInterface = {\r\n    targetItem: {\r\n        weekId: number, priorityId: number, taskId: string | number\r\n    },\r\n    indexItem: {\r\n        weekId: number, priorityId: number, taskId: string | number\r\n    }\r\n}\r\n\r\nexport const createTask = (task: Task) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.CREATE_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateTask = (task: Task) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.UPDATE_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleCompleteTask = (id: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.TOGGLE_COMPLETE_TASK,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleArchivedTask = (id: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.TOGGLE_ARCHIVED_TASK,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const setSelectedTaskId = (id: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.SET_SELECTED_TASK_ID,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeSelectedTaskId = () => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.REMOVE_SELECTED_TASK_ID,\r\n        })\r\n    }\r\n}\r\n\r\nexport const draggingTask = (item: DraggItemInterface) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.DRAGGING_TASK,\r\n            payload: item\r\n        })\r\n    }\r\n}","import React, {useRef} from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst MODAL_STYLES: {} = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  zIndex: 1000\r\n}\r\n\r\ninterface ModalProps{\r\n    open: boolean,\r\n    children: React.ReactNode,\r\n}\r\n\r\nexport default function Modal({ open, children }: ModalProps) {\r\n  \r\n  const dragModal = useRef<HTMLDivElement | null>(null);\r\n  let prevX: number, prevY: number;\r\n\r\n  const dragMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {  \r\n    if((e.target as Element).id === \"div_moveble\"){ \r\n      dragModal.current = e.currentTarget;\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      // get the mouse cursor position at startup:\r\n      prevX = e.clientX;\r\n      prevY = e.clientY;\r\n      document.addEventListener('mouseup', closeDragElement);\r\n      // // call a function whenever the cursor moves:\r\n      document.addEventListener('mousemove', elementDrag);\r\n      \r\n    } \r\n  }\r\n\r\n  const elementDrag = (e: MouseEvent) =>{\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n\r\n    // calculate the new cursor position:\r\n    let newX = prevX - e.clientX;\r\n    let newY = prevY - e.clientY;\r\n\r\n    prevX = e.clientX;\r\n    prevY = e.clientY;\r\n\r\n    dragModal.current!.style.top = (dragModal.current!.offsetTop - newY) + \"px\";\r\n    dragModal.current!.style.left = (dragModal.current!.offsetLeft - newX) + \"px\";\r\n  }\r\n\r\n  const closeDragElement = () =>{\r\n    // stop moving when mouse button is released:\r\n    document.removeEventListener('mouseup', closeDragElement);\r\n    document.removeEventListener('mousemove', elementDrag);\r\n  }\r\n\r\n\r\n\r\n  if (!open) return null\r\n  \r\n  return ReactDom.createPortal(\r\n    <>\r\n      <div style = {MODAL_STYLES}\r\n        onMouseDown = {(e) => dragMouseDown(e)}\r\n      >\r\n        {children}\r\n      </div>\r\n    </>,\r\n    document.getElementById('portal') as HTMLElement\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTask } from '../../../store/action-creators/taskActionCreator';\r\nimport Modal from '../../../Utils/Modal';\r\nimport './ModalTask.css';\r\nimport { Task } from '../../../models';\r\nimport { priorities, weeks, categories } from '../../../constraints/dummyData'\r\n\r\ninterface ModalTaskProps{\r\n    isOpen: boolean,\r\n    onClose: () => void\r\n}\r\n\r\nconst ModalTask = ({isOpen, onClose}: ModalTaskProps) =>{\r\n    const dispatch = useDispatch();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [categorySelected, setCategorySelected] = useState(1);\r\n    const [weekDaySelected, setWeekDaySelected] = useState(1);\r\n    const [prioritySelected, setPrioritySelected] = useState(1);\r\n    const [ dueDate, setDueDate ] = useState<Date | null>(null)\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault();     \r\n        const newTask = new Task(\r\n          weekDaySelected,\r\n          prioritySelected,\r\n          categorySelected,\r\n          title,\r\n          description,\r\n          dueDate\r\n        )\r\n\r\n        dispatch(createTask(newTask));\r\n\r\n        onClose();\r\n\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setDueDate(null)\r\n        setCategorySelected(1);\r\n        setWeekDaySelected(1);\r\n        setPrioritySelected(1);\r\n    }\r\n\r\n\r\n    const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setCategorySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    const handleSelectWeekChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setWeekDaySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    const handleSelectPriorityChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setPrioritySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    return(\r\n        <Modal open={isOpen}>\r\n        <div className = \"modal_create\" id = \"div_moveble\">\r\n          <button className = \"close_modal\" onClick={onClose}>\r\n            <span className=\"iconify\" data-inline=\"false\" data-icon=\"ant-design:close-outlined\"></span>\r\n          </button>\r\n          <form onSubmit = {(e) => handleSubmit(e)}>\r\n            <label>Name Task:</label>\r\n            <input value = {title} onChange = {(e) => setTitle(e.target.value)}/>\r\n\r\n            <label>Description:</label> \r\n            <textarea value = {description} onChange = {(e) => setDescription(e.target.value)}/>\r\n\r\n            <div className = \"form_group\">\r\n              <div className = \"date_input\">\r\n                <label>Due:</label>\r\n                <input type=\"date\" onChange = {(e) => setDueDate(e.target.valueAsDate)}/>\r\n              </div>\r\n              <div className = \"category_select\">\r\n                <label>Category:</label>\r\n                <select onChange = {handleCategoryChange}>\r\n                  {categories.map(category => (\r\n                    <option value = {category.id}>{category.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"form_group\">\r\n              <div className = \"select_weekday\">\r\n                <label>Week Day:</label>\r\n                <select onChange = {handleSelectWeekChange}>\r\n                  {weeks.map(week => (\r\n                    <option value = {week.id}>{week.day}</option>\r\n                  ))}\r\n                </select>   \r\n              </div>\r\n              <div className = \"select_priority\">\r\n                <label>Priority:</label>\r\n                <select onChange = {handleSelectPriorityChange}>\r\n                  {priorities.map(priority => (\r\n                    <option value = {priority.id}>{priority.type}</option>\r\n                  ))}\r\n                </select>  \r\n              </div>\r\n            </div>        \r\n\r\n            <button type = \"submit\">Save</button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalTask;","type PriotityLabelProps = {\r\n    priorityType:  1 | 2\r\n}\r\n\r\nconst PriorityHorizontalLabel = ({priorityType}: PriotityLabelProps) => {\r\n    return(\r\n        <div className = \"text_priority\" >{priorityType === 1 ? \"Urgent\" : \"Not Urgent\"}</div>\r\n    )\r\n}\r\n\r\nexport default PriorityHorizontalLabel","type PriotityLabelProps = {\r\n    priorityType: 1 | 3\r\n}\r\n\r\nconst PriorityVerticalLabel = ({priorityType}: PriotityLabelProps) => {\r\n    return(\r\n            <div className=\"outer\">\r\n                {<div className=\"inner text_priority rotate\">{priorityType === 1 ? \"Important\" : \"Not Important\"}</div>}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PriorityVerticalLabel","import { useSelector } from 'react-redux';\r\nimport { Todo } from \"../../../models/Todo\";\r\nimport { State } from '../../../store/reducers/rootReducer';\r\nimport \"./TooltipTaskDescription.css\"\r\n\r\ninterface TooltipTaskDescriptionProps{\r\n    priorityId: number,\r\n    taskId: string,\r\n    description: string\r\n\r\n}\r\n\r\nconst TooltipTaskDescription = ({priorityId, taskId, description}: TooltipTaskDescriptionProps) =>{\r\n    \r\n    const todos: Todo[] = useSelector((state: State) => {\r\n        return state.todos.todos.filter((todo) =>{\r\n                return todo.taskId === taskId;\r\n        })\r\n    });\r\n\r\n    let completedTodos = 0;\r\n\r\n    \r\n    todos.forEach((todo)=> {\r\n        if(todo.isCompleted === true){ completedTodos += 1 }\r\n    })\r\n    \r\n\r\n    \r\n\r\n    const getClassPosition = (priorityId: number) =>{\r\n        if(priorityId === 2 || priorityId === 4){\r\n          return 'right'\r\n        } \r\n        return 'left'\r\n    }\r\n\r\n    return(\r\n        <div className={`tooltip ${getClassPosition(priorityId)}`}>\r\n            <span>{description}</span>\r\n            {todos.length > 0 &&\r\n                <span className = \"todo_count\">\r\n                    Tasks: {completedTodos} / {todos.length} completed\r\n                </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipTaskDescription;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTask } from '../../../store/action-creators/taskActionCreator';\r\nimport moment from \"moment\";\r\nimport Modal from '../../../Utils/Modal';\r\nimport './ModalTask.css';\r\nimport { Task } from '../../../models';\r\nimport { priorities, weeks, categories } from '../../../constraints/dummyData'\r\n\r\ninterface ModalTaskProps{\r\n    task: Task,\r\n    isOpen: boolean,\r\n    onClose: () => void\r\n}\r\n\r\nconst ModalTaskEdit = ({task, isOpen, onClose}: ModalTaskProps) =>{\r\n    const dispatch = useDispatch();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [categorySelected, setCategorySelected] = useState(1);\r\n    const [weekDaySelected, setWeekDaySelected] = useState(1);\r\n    const [prioritySelected, setPrioritySelected] = useState(1);\r\n    const [ dueDate, setDueDate ] = useState<Date | null>(null);\r\n\r\n    useEffect(()=>{\r\n      setTitle(task.title);\r\n      setDescription(task.description);\r\n      setCategorySelected(task.categoryId)\r\n      setWeekDaySelected(task.weekId);\r\n      setPrioritySelected(task.priorityId);\r\n      setDueDate(task.due)     \r\n    }, [task])\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault();\r\n        \r\n        const updatedTask: Task = {\r\n          id: task.id,\r\n          weekId: weekDaySelected,\r\n          priorityId: prioritySelected,\r\n          categoryId: categorySelected,\r\n          title,\r\n          description,\r\n          due: dueDate,\r\n          isCompleted: task.isCompleted,\r\n          isArchived: task.isArchived\r\n        }\r\n\r\n        dispatch(updateTask(updatedTask));\r\n\r\n        onClose()\r\n    }\r\n\r\n    const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setCategorySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    const handleSelectWeekChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setWeekDaySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    const handleSelectPriorityChange = (e: React.ChangeEvent<HTMLSelectElement>) =>{\r\n      setPrioritySelected(parseInt(e.target.value))\r\n    }\r\n\r\n    return(\r\n        <Modal open={isOpen}>\r\n        <div className = \"modal_create\" id = \"div_moveble\">\r\n          <button className = \"close_modal\" onClick={onClose}>\r\n            <span className=\"iconify\" data-inline=\"false\" data-icon=\"ant-design:close-outlined\"></span>\r\n          </button>\r\n          <form onSubmit = {(e) => handleSubmit(e)}>\r\n            <label>Name Task:</label>\r\n            <input value = {title} onChange = {(e) => setTitle(e.target.value)}/>\r\n\r\n            <label>Description:</label> \r\n            <textarea value = {description} onChange = {(e) => setDescription(e.target.value)}/>\r\n\r\n            <div className = \"form_group\">\r\n              <div className = \"date_input\">\r\n                <label>Due:</label>\r\n                <input type=\"date\" value = {dueDate ? moment(dueDate).utcOffset('+0100').format(\"YYYY-MM-DD\") : \"\"} onChange = {(e) => setDueDate(e.target.valueAsDate)}/>\r\n              </div>\r\n              <div className = \"category_select\">\r\n                <label>Category:</label>\r\n                <select defaultValue = {categorySelected} onChange = {handleCategoryChange}>\r\n                  {categories.map(category => (\r\n                    <option value = {category.id}>{category.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"form_group\">\r\n              <div className = \"select_weekday\">\r\n                <label>Week Day:</label>\r\n                <select defaultValue = {weekDaySelected} onChange = {handleSelectWeekChange}>\r\n                  {weeks.map(week => (\r\n                    <option value = {week.id}>{week.day}</option>\r\n                  ))}\r\n                </select>   \r\n              </div>\r\n              <div className = \"select_priority\">\r\n                <label>Priority:</label>\r\n                <select defaultValue = {prioritySelected} onChange = {handleSelectPriorityChange}>\r\n                 {priorities.map(priority => (\r\n                    <option value = {priority.id}>{priority.type}</option>\r\n                  ))}\r\n                </select>  \r\n              </div>\r\n            </div>        \r\n\r\n            <button type = \"submit\">Update</button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalTaskEdit;","import React, { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Todo } from '../../../../models';\r\nimport { createTodo, deleteTodo, toggleCompleteTodo, draggingTodo } from '../../../../store/action-creators/todoActionCreator';\r\nimport { State } from '../../../../store/reducers/rootReducer';\r\nimport './TodoComponent.css'\r\n\r\ninterface TodoComponentProps{\r\n    selectedTaskId: string;\r\n    priorityColor?: string\r\n}\r\n\r\nconst TodoComponent = ({selectedTaskId, priorityColor}: TodoComponentProps) =>{\r\n    const dispatch = useDispatch();\r\n    const [inputTodo, setInputTodo] = useState(\"\");\r\n    const [checkShowTodosCompleted, setCheckShowTodosCompleted] = useState(true);\r\n    const [ isDraggingTodo,  setIsDraggingTodo ] = useState(false)\r\n    const dragItemTodo = useRef<string | null>(null);\r\n    const dragItemNodeTodo = useRef<HTMLDivElement | null>(null);\r\n\r\n    const todos: Todo[] = useSelector((state: State) => {\r\n        return state.todos.todos.filter((todo) =>{\r\n                return todo.taskId === selectedTaskId;\r\n        })\r\n    });\r\n\r\n    const handleInputTodoChange = (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n        setInputTodo(e.target.value)\r\n    }\r\n\r\n    const handleShowCheckboxTodo = () => {\r\n        setCheckShowTodosCompleted(!checkShowTodosCompleted)\r\n    }\r\n\r\n    const handleSaveTodo = () =>{\r\n        const newTodo =  new Todo(selectedTaskId, inputTodo) \r\n        dispatch(createTodo(newTodo))\r\n        setInputTodo(\"\")\r\n    }\r\n\r\n    const handleCheckTodo = (todoId: string) =>{\r\n        dispatch(toggleCompleteTodo(todoId))\r\n    }\r\n\r\n    const handleDeleteTodo = (todoId: string) =>{\r\n        dispatch(deleteTodo(todoId))\r\n    }\r\n\r\n    const handletDragStartTodo = (e: any, todoId: string) =>{\r\n        dragItemNodeTodo.current = e.target;\r\n        dragItemNodeTodo.current!.addEventListener('dragend', handleDragEndTodo)    \r\n        dragItemTodo.current = todoId;\r\n        setTimeout(() => {\r\n          setIsDraggingTodo(true);\r\n        }, 0)\r\n    }\r\n\r\n    const handleDragEnterTodo = (e: any, todoIdTarget: string) =>{\r\n        if (dragItemNodeTodo.current !== e.target) {\r\n            dispatch(draggingTodo({todoId: dragItemTodo.current!, todoIdTarget}))\r\n       }\r\n    }\r\n\r\n    const handleDragEndTodo = () => {\r\n        setIsDraggingTodo(false);\r\n        dragItemTodo.current = null;\r\n        dragItemNodeTodo.current!.removeEventListener('dragend', handleDragEndTodo)\r\n        dragItemNodeTodo.current = null;\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    const toogleDisplayTodo = (isCompletedTodo: boolean) =>{\r\n        if(!checkShowTodosCompleted && isCompletedTodo) return \"hide_todo\";\r\n        return \"todo_item\";\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className = \"add_todo\">\r\n                <input value = {inputTodo} onChange = {handleInputTodoChange}/>\r\n                <button style = {{backgroundColor: priorityColor}} onClick = {handleSaveTodo}>Add Task</button>\r\n            </div>\r\n            <div className = \"check_completed\">\r\n                <input type=\"checkbox\" defaultChecked = {checkShowTodosCompleted} onChange = {handleShowCheckboxTodo}/>\r\n                <span>Show Completed tasks</span>\r\n            </div>\r\n\r\n            <div className = \"todo_container\">\r\n                {todos?.length <= 0 && <span style = {{textAlign: \"center\", fontSize: 15, marginBottom: 8}}>There aren't any Todo to be seen</span>}\r\n                {todos?.map((todo) => (\r\n                    <div\r\n                         key = {todo.id} \r\n                         className = {toogleDisplayTodo(todo.isCompleted)}\r\n                         style = {{cursor: 'grab'}}\r\n                         draggable \r\n                         onDoubleClick = {() => handleCheckTodo(todo.id)}\r\n                         onDragStart={(e) => handletDragStartTodo(e, todo.id)} \r\n                         onDragEnter={isDraggingTodo ? (e) => {handleDragEnterTodo(e, todo.id)}: undefined}\r\n                         >\r\n                        <div>\r\n                            <span className=\"iconify\" data-icon=\"ic:baseline-drag-indicator\" style = {{cursor: 'grab'}}></span>\r\n                            <span style = {{textDecoration: todo.isCompleted === true ? \"line-through\" : \"inherit\", marginLeft: 10, cursor: 'pointer'}}>{todo.nameTodo}</span>\r\n                        </div>\r\n                        <button onClick = {() => handleDeleteTodo(todo.id)}>\r\n                            <span className =\"iconify\" data-inline=\"false\" data-icon=\"bi:trash\"></span>\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoComponent;","import { Dispatch } from \"redux\"\r\nimport { Todo } from \"../../models\"\r\nimport { ActionType } from \"../action-types\"\r\nimport { Action } from \"../actions/todos\"\r\n\r\ninterface TodoDraggingInterface{\r\n    todoId: string,\r\n    todoIdTarget: string\r\n}\r\n\r\nexport const createTodo = (todo: Todo) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.CREATE_TODO,\r\n            payload: todo\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleCompleteTodo = (id: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.TOGGLE_COMPLETE_TODO,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.DELETE_TODO,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const draggingTodo = (todoDrag: TodoDraggingInterface) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.DRAGGING_TODO,\r\n            payload: todoDrag\r\n        })\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from '../../../Utils/Modal'\r\nimport './ModalTaskDetails.css';\r\nimport { Task } from '../../../models';\r\nimport { State } from '../../../store/reducers/rootReducer';\r\nimport { categories, priorities } from '../../../constraints/dummyData';\r\nimport { toggleArchivedTask } from '../../../store/action-creators/taskActionCreator';\r\nimport ModalTaskEdit from '../ModalTask/ModalTaskEdit';\r\nimport TodoComponent from './components/TodoComponent';\r\n\r\ninterface ModalTaskDetailsProps{\r\n    isOpen: boolean,\r\n    selectedTaskId?: string | null,\r\n    onClose: () => void\r\n}\r\n\r\nconst ModalTaskDetails = ({isOpen, onClose, selectedTaskId}: ModalTaskDetailsProps) => {\r\n    const dispatch = useDispatch();\r\n    const [isModalTaskEditOpen, setIsModalTaskEditOpen] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setIsModalTaskEditOpen(false)\r\n    },[selectedTaskId])\r\n\r\n    const task: Task | undefined = useSelector((state: State) => {\r\n        return state.tasks.tasks.find((task) =>{\r\n                return task.id === selectedTaskId;\r\n        })\r\n    });\r\n\r\n    const priorityColor = priorities.find((priority) => priority.id === task?.priorityId)\r\n    const categoryTask = categories.find((category) => category.id === task?.categoryId)\r\n\r\n    const handleArchiveTask = (taskId: string) =>{\r\n        dispatch(toggleArchivedTask(taskId))\r\n    }\r\n\r\n    const handleModalEditTaskOpen = () =>{\r\n        setIsModalTaskEditOpen(true)\r\n    }\r\n\r\n    const handleModalEditTaskClose = () =>{\r\n        setIsModalTaskEditOpen(false)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {selectedTaskId && <ModalTaskEdit isOpen = {isModalTaskEditOpen} onClose = {handleModalEditTaskClose} task = {task!}/>}\r\n        <Modal open = {isOpen}>\r\n            <div id = \"div_moveble\" className = \"modal_details\">\r\n                <div id = \"div_moveble\" className = \"header\" style = {{background: priorityColor?.color}}>\r\n                    <div>\r\n                        <span className=\"iconify\" data-inline=\"false\" data-icon={categoryTask?.icon}></span>\r\n                    </div>\r\n                    <h2>{task?.title}</h2>\r\n                    <div className = \"actions\">\r\n                        <button onClick = {handleModalEditTaskOpen}>\r\n                            <span className=\"iconify\" data-inline=\"false\" data-icon=\"bx:bx-edit\"></span>\r\n                        </button>\r\n                        <button onClick = {() => handleArchiveTask(task!.id)}>\r\n                            <span className=\"iconify\" data-inline=\"false\" data-icon=\"bx:bx-archive-out\"></span>\r\n                        </button>\r\n                        <button onClick = {onClose}>\r\n                            <span className=\"iconify\" data-inline=\"false\" data-icon=\"ant-design:close-outlined\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"content\">\r\n                    <p>{task?.description}</p>\r\n                    {selectedTaskId && <TodoComponent\r\n                        priorityColor = {priorityColor?.color}\r\n                        selectedTaskId = {selectedTaskId}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalTaskDetails;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment\";\r\nimport { Task } from \"../../../models\";\r\nimport { removeSelectedTaskId, setSelectedTaskId, toggleCompleteTask } from '../../../store/action-creators/taskActionCreator';\r\nimport { State } from \"../../../store/reducers/rootReducer\"\r\nimport TooltipTaskDescription from './TooltipTaskDescription';\r\nimport ModalTaskDetails from \"../ModalTaskDetails/ModalTaskDetails\";\r\nimport { categories } from '../../../constraints/dummyData';\r\n\r\ntype TypeProps = {\r\n    weekId: number,\r\n    priorityId: number,\r\n    dragging: boolean,\r\n    handleDragEnter: (e: React.DragEvent<HTMLDivElement>, item: {weekId: number, priorityId: number, taskId: string | number}) => void,\r\n    handletDragStart: (e: React.DragEvent<HTMLDivElement>, item: {weekId: number, priorityId: number, taskId: string}) => void\r\n}\r\n\r\nconst TaskItem = ({ weekId, priorityId, dragging, handleDragEnter, handletDragStart }: TypeProps) =>{\r\n    const [ isModalTaskDetailsOpen, setIsModalTaskDetailsOpen ] = useState(false)\r\n    const dispatch = useDispatch();\r\n    \r\n    /** Variables time to define if it's a single or double click **/\r\n    let timer: ReturnType<typeof setTimeout>;\r\n    let delay = 300;\r\n    let prevent = false;\r\n\r\n    const selectedTaskId: string | null = useSelector((state: State) => state.tasks.selectedTaskId);\r\n\r\n    const filteredTasks: Task[] = useSelector((state: State) => {\r\n        return state.tasks.tasks.filter(task =>{\r\n                return task.weekId === weekId && task.priorityId === priorityId && task.isArchived !== true;\r\n            })\r\n    });\r\n\r\n    \r\n\r\n\r\n    const handleToggledCompleteTask = (id: string): void =>{\r\n        clearTimeout(timer);\r\n        prevent = true;\r\n        dispatch(toggleCompleteTask(id));\r\n        setTimeout(() => {\r\n            prevent = false;\r\n        }, delay);\r\n    }\r\n\r\n    const handleOpenModalTaskDetails = (id: string): void => {\r\n        timer = setTimeout(() => {\r\n            if (!prevent) {\r\n                dispatch(setSelectedTaskId(id));\r\n                setIsModalTaskDetailsOpen(true);\r\n            }\r\n        }, delay);      \r\n    }\r\n\r\n    const handleCloseModalTaskDetails = (): void => {\r\n        dispatch(removeSelectedTaskId())\r\n        setIsModalTaskDetailsOpen(false)\r\n    }\r\n\r\n    const getCategoryItem = (categoryId: number) =>{\r\n        const category = categories.find((category) => category.id === categoryId)\r\n        return category?.icon\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {selectedTaskId !== null &&\r\n            <ModalTaskDetails isOpen = {isModalTaskDetailsOpen} onClose = {handleCloseModalTaskDetails} selectedTaskId = {selectedTaskId}/>\r\n        }\r\n\r\n        {filteredTasks.length > 0 && \r\n            filteredTasks.map((task, indexTask) =>\r\n                <div className=\"card-item\" \r\n                    id = {task.id}\r\n                     draggable \r\n                     onClick = {() => handleOpenModalTaskDetails(task.id)}\r\n                     onDoubleClick = {() => handleToggledCompleteTask(task.id)}\r\n                     onDragStart = {(e) => handletDragStart(e, {weekId, priorityId, taskId: task.id})}\r\n                     onDragEnter={dragging ? (e) => handleDragEnter(e, {weekId, priorityId, taskId: task.id}) : undefined}\r\n                    >\r\n                        <div className = \"info\">\r\n                            <div style = {{display: \"flex\", alignItems: 'center'}}>\r\n                                <span className=\"iconify\" data-inline=\"false\" data-icon = {getCategoryItem(task.categoryId)}></span>\r\n                                <p style = {{textDecoration: task.isCompleted ? \"line-through\": \"inherit\"}}>{task.title}</p>\r\n                            </div>\r\n                            {task.due && <div className = \"due_date\"><span>{moment(task.due).utcOffset('+0100').format(\"DD/MM\")}</span></div>}\r\n                        </div>\r\n                    {task.description &&\r\n                        <TooltipTaskDescription taskId={task.id} description = {task.description} priorityId = {priorityId}/>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import React, { useRef } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { priorities } from \"../../../constraints/dummyData\"\r\nimport PriorityHorizontalLabel from \"./PriorityHorizontalLabel\";\r\nimport PriorityVerticalLabel from \"./PriorityVerticalLabel\";\r\nimport { draggingTask } from \"../../../store/action-creators/taskActionCreator\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\ntype itemDragged = {\r\n    weekId: number, priorityId: number, taskId: string | number\r\n}\r\n\r\ntype PriotityGridProps = {\r\n    weekId: number,\r\n    dragging: boolean,\r\n    onDragging: (isDragging: boolean) => void,\r\n    draggedItem: itemDragged | null\r\n    onDragged: (item: itemDragged | null) => void\r\n}\r\n\r\n\r\n\r\nconst PriorityGrid = ({ weekId, dragging, onDragging, draggedItem, onDragged }: PriotityGridProps) =>{\r\n    const dispatch = useDispatch();\r\n    const dragItemNode = useRef<HTMLDivElement | null>(null);\r\n\r\n    const handletDragStart = (e: React.DragEvent<HTMLDivElement>, item: itemDragged) => {\r\n        dragItemNode.current = e.target as HTMLDivElement;\r\n        dragItemNode.current!.classList.add(\"remove_hover\")\r\n        dragItemNode.current!.addEventListener('dragend', handleDragEnd)    \r\n\r\n        onDragged(item)\r\n   \r\n        setTimeout(() => {\r\n          onDragging(true);\r\n        }, 0)\r\n    }\r\n    \r\n    const handleDragEnter = (e: React.DragEvent<HTMLDivElement>, targetItem: itemDragged) => {\r\n        if (dragItemNode.current !== e.target) {\r\n            draggedItem && dispatch(draggingTask({\r\n                targetItem, \r\n                indexItem: draggedItem\r\n            }))          \r\n       }        \r\n    }\r\n\r\n    \r\n\r\n    const handleDragEnd = () => {\r\n        onDragging(false)\r\n        onDragged(null);\r\n        dragItemNode.current!.removeEventListener('dragend', handleDragEnd)\r\n        dragItemNode.current = null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"priority_grid\">\r\n            {\r\n                priorities.map((priority) => \r\n                <div style = {{display: \"flex\"}} key = {priority.id}>\r\n                    {(priority.id === 1 || priority.id === 3) && (\r\n                            <PriorityVerticalLabel priorityType = {priority.id}/> \r\n                        )\r\n                    }\r\n\r\n                    <div className = \"container_mobile_priority\">\r\n                        {(priority.id === 1 || priority.id === 2) && (\r\n                            <PriorityHorizontalLabel priorityType = {priority.id}/>\r\n                        )}\r\n\r\n                        <div className=\"card_priority\"\r\n                            style={{ backgroundColor: priority.color }} \r\n                            onDragEnter={dragging ? (e) => handleDragEnter(e, {weekId, priorityId: priority.id, taskId: 0}) : undefined }\r\n                            onDragOver = {(e) => e.preventDefault()}\r\n                        >\r\n\r\n                            <TaskItem\r\n                                weekId = {weekId}\r\n                                priorityId = {priority.id}\r\n                                dragging = {dragging}\r\n                                handleDragEnter = {handleDragEnter}\r\n                                handletDragStart = {handletDragStart}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PriorityGrid;","import { useState } from \"react\";\r\nimport { weeks } from \"../../constraints/dummyData\"\r\nimport ModalTask from \"./ModalTask/ModalTask\";\r\nimport PriorityGrid from \"./components/PriorityGrid\";\r\nimport './EisenhowerMatrix.css'\r\n\r\ntype itemDragged = {\r\n    weekId: number, priorityId: number, taskId: string | number\r\n}\r\n\r\nconst EisenhowerMatrix = () =>{\r\n    const [ isModalTaskOpen, setIsModalTaskOpen ] = useState(false)\r\n    const [draggedItem, setDraggedItem] = useState<itemDragged | null>(null)\r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    const handleCloseModalTask = () =>{\r\n        setIsModalTaskOpen(false);\r\n    }\r\n\r\n    const handleOpenModalTask = () =>{\r\n        setIsModalTaskOpen(true);\r\n    }\r\n\r\n    const handleDragged = (item: itemDragged | null) =>{\r\n        setDraggedItem(item)\r\n    }\r\n\r\n    const handleSetIsDragging = (isDragging: boolean) =>{\r\n        setDragging(isDragging)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ModalTask isOpen = {isModalTaskOpen} onClose = {handleCloseModalTask} />\r\n        <div className = \"week\">\r\n            {\r\n                weeks.map((week, indexWeek)=>\r\n                    <div className=\"card\" key = {week.id}>\r\n                        <h1>{week.day}</h1>  \r\n                        <PriorityGrid weekId = {week.id} dragging = {dragging} onDragging = {handleSetIsDragging} draggedItem = {draggedItem} onDragged = {handleDragged}/> \r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        {!isModalTaskOpen && <button className = \"btn_add\" onClick = {handleOpenModalTask}>+</button>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EisenhowerMatrix;","import './App.css';\nimport EisenhowerMatrix from './pages/EisenhowerMatrixPage/EisenhowerMatrix';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EisenhowerMatrix/>\n    </div>\n  );\n}\n\nexport default App;\n","import { Task } from \"../../models\";\r\nimport { ActionType } from \"../action-types/index\"\r\nimport { Action } from \"../actions/tasks\"\r\n\r\nconst initialState: {\r\n    tasks: Task[],\r\n    selectedTaskId: string | null\r\n} = {\r\n    tasks: [],\r\n    selectedTaskId: null\r\n}\r\n\r\nlet foundIndex = -1;\r\n\r\nconst tasksReducer = (state = initialState, action: Action) =>{\r\n    switch(action.type){\r\n        case ActionType.CREATE_TASK:\r\n            let newTask = [...state.tasks]\r\n            newTask.push(action.payload)\r\n            return {...state, tasks: newTask};\r\n        \r\n        case ActionType.UPDATE_TASK:\r\n            let updateTask = [...state.tasks]\r\n            foundIndex = updateTask.findIndex(el => el.id === action.payload.id);\r\n            updateTask[foundIndex] = action.payload\r\n            return {...state, tasks: updateTask};\r\n\r\n        \r\n        case ActionType.TOGGLE_COMPLETE_TASK:\r\n            let toggleCompleteTask = [...state.tasks];\r\n            foundIndex = toggleCompleteTask.findIndex(el => el.id === action.payload);\r\n            toggleCompleteTask[foundIndex].isCompleted = !toggleCompleteTask[foundIndex].isCompleted; \r\n            return {...state, tasks: toggleCompleteTask}\r\n        \r\n        case ActionType.SET_SELECTED_TASK_ID:\r\n            return {...state, selectedTaskId: action.payload}\r\n        \r\n        case ActionType.REMOVE_SELECTED_TASK_ID:\r\n            return {...state, selectedTaskId: null}\r\n        \r\n        case ActionType.TOGGLE_ARCHIVED_TASK:\r\n            let toggleArchivedTask = [...state.tasks];\r\n            foundIndex = toggleArchivedTask.findIndex(el => el.id === action.payload);\r\n            toggleArchivedTask[foundIndex].isArchived = !toggleArchivedTask[foundIndex].isArchived; \r\n            return {...state, tasks: toggleArchivedTask, selectedTaskId: null}\r\n\r\n        case ActionType.DRAGGING_TASK:\r\n            let draggingTask = [...state.tasks];\r\n            foundIndex = draggingTask.findIndex(el => el.id === action.payload.indexItem.taskId);\r\n            let foundIndexTarget = draggingTask.findIndex(el => el.id === action.payload.targetItem.taskId);\r\n            if(foundIndex !== -1){\r\n                foundIndexTarget !== -1 && \r\n                    foundIndexTarget !== foundIndex && \r\n                        draggingTask.splice(foundIndex, 0, draggingTask.splice(foundIndexTarget, 1)[0]) \r\n                draggingTask[foundIndex].weekId = action.payload.targetItem.weekId; \r\n                draggingTask[foundIndex].priorityId = action.payload.targetItem.priorityId;                 \r\n            }\r\n\r\n            return {...state, tasks: draggingTask}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tasksReducer;","import { Todo } from \"../../models\";\r\nimport { ActionType } from \"../action-types/index\"\r\nimport { Action } from \"../actions/todos\"\r\n\r\nconst initialState: {\r\n    todos: Todo[],\r\n} = {\r\n    todos: [],\r\n}\r\n\r\nlet foundIndex = -1;\r\n\r\nconst todosReducer = (state = initialState, action: Action) =>{\r\n    switch(action.type){\r\n        case ActionType.CREATE_TODO:\r\n            let newTodo = [...state.todos];\r\n            newTodo.push(action.payload);\r\n            return {...state, todos: newTodo};\r\n        \r\n        case ActionType.TOGGLE_COMPLETE_TODO:\r\n            let toggleCompleteTodo = [...state.todos];\r\n            foundIndex = toggleCompleteTodo.findIndex(el => el.id === action.payload);\r\n            toggleCompleteTodo[foundIndex].isCompleted = !toggleCompleteTodo[foundIndex].isCompleted; \r\n            return {...state, todos: toggleCompleteTodo};\r\n        \r\n        case ActionType.DELETE_TODO:\r\n            let deletedTodo = [...state.todos]\r\n            let updatedDeletedTodo = deletedTodo.filter((todo) => {\r\n                return todo.id !== action.payload\r\n            })\r\n            return {...state, todos: updatedDeletedTodo}\r\n        \r\n        case ActionType.DRAGGING_TODO:\r\n            let draggingTodo = [...state.todos];\r\n            foundIndex = draggingTodo.findIndex(el => el.id === action.payload.todoId);\r\n            var foundIndexTarget = draggingTodo.findIndex(el => el.id === action.payload.todoIdTarget);\r\n            if(foundIndex !== -1){\r\n                foundIndexTarget !== -1 && \r\n                    foundIndexTarget !== foundIndex && \r\n                        draggingTodo.splice(foundIndex, 0, draggingTodo.splice(foundIndexTarget, 1)[0]) \r\n            }\r\n\r\n            return {...state, todos: draggingTodo}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todosReducer;","import { combineReducers } from 'redux';\r\nimport tasksReducer from './tasksReducer';\r\nimport todosReducer from './todosReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks: tasksReducer,\r\n    todos: todosReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type State = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from \"redux-thunk\"\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n  persistedReducer,\n  {},\n  applyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <PersistGate loading={null} persistor={persistor}>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </PersistGate>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}